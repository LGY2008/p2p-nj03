<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1612340835512" stop="1612340836966">
  <name>script</name>
  <labels/>
  <test-cases>
    <test-case start="1612340835512" status="passed" stop="1612340835914">
      <name>test03_tender.TestTender.test01_tender[642-1000--1-OK]</name>
      <attachments>
        <attachment source="33a87a5c-b008-4249-953b-41fd5bb27866-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="37835-MainThread"/>
        <label name="host" value="MonkeyPro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1612340835915" status="failed" stop="1612340836162">
      <name>test03_tender.TestTender.test01_tender[642-1000-123-\u6295\u8d44\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a]</name>
      <failure>
        <message>AssertionError: 预期结果：投资密码不能为空 实际结果：{'form': '&lt;form name=\'easypaysubmit\' id=\'easypaysubmit\' target=\'_blank\' method=\'post\' action=\'http://52.83.181.187:8000/muser/publicRequests\'&gt;&lt;input name=\'Version\' type=\'hidden\' value=\'20\'/&gt;&lt;input name=\'CmdId\' type=\'hidden\' value=\'InitiativeTender\'/&gt;&lt;input name=\'MerCustId\' type=\'hidden\' value=\'6000060007313892\'/&gt;&lt;input name=\'OrdId\' type=\'hidden\' value=\'21020316272077131795\'/&gt;&lt;input name=\'OrdDate\' type=\'hidden\' value=\'20210203\'/&gt;&lt;input name=\'TransAmt\' type=\'hidden\' value=\'1000.00\'/&gt;&lt;input name=\'UsrCustId\' type=\'hidden\' value=\'6020210203111708\'/&gt;&lt;input name=\'MaxTenderRate\' type=\'hidden\' value=\'0.20\'/&gt;&lt;input name=\'BorrowerDetails\' type=\'hidden\' value=\'[{"BorrowerCustId":"6021234507160403","BorrowerAmt":"1000.00","BorrowerRate":"0.90","ProId":""}]\'/&gt;&lt;input name=\'IsFreeze\' type=\'hidden\' value=\'Y\'/&gt;&lt;input name=\'FreezeOrdId\' type=\'hidden\' value=\'21020316272077131795\'/&gt;&lt;input name=\'RetUrl\' type=\'hidden\' value=\'http://user-p2p-test.itheima.net/trust/chinapnr/tender/return/21020316272077131795\'/&gt;&lt;input name=\'BgRetUrl\' type=\'hidden\' value=\'https://www.baidu.com/\'/&gt;&lt;input name=\'MerPriv\' type=\'hidden\' value=\'\'/&gt;&lt;input name=\'ReqExt\' type=\'hidden\' value=\'\'/&gt;&lt;input name=\'ChkValue\' type=\'hidden\' value=\'-101\'/&gt;&lt;input name=\'CharSet\' type=\'hidden\' value=\'UTF-8\'/&gt;&lt;/form&gt;&lt;script&gt;document.forms[\'easypaysubmit\'].submit();&lt;/script&gt;'}</message>
        <stack-trace>self = &lt;script.test03_tender.TestTender object at 0x10f8db390&gt;, tender_id = 642
amount = 1000, depositCertificate = '123', expect_msg = '投资密码不能为空'

    @pytest.mark.parametrize(("tender_id", "amount", "depositCertificate", "expect_msg"),
                             read_json("tender.json", "tender"))
    def test01_tender(self, tender_id, amount, depositCertificate, expect_msg):
        # 1、登录
        self.login.api_login("13600001111", "test123")
        # 2、调用投资接口
        result = self.tender.api_tender(tender_id, amount, depositCertificate)
        if expect_msg == "OK":
            # 3、三方投资
            # 提取三方投资所需数据
            r = parser_html(result)
            # 请求方法投资
            result = self.session.post(url=r[0], data=r[1])
            print(result.text)
            try:
                common_assert(result, expect_text=expect_msg)
            except Exception as e:
                # 日志
                log.error(e)
                # 抛异常
                raise
        else:
            try:
&gt;               common_assert(result, expect_msg=expect_msg)

test03_tender.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

result = &lt;Response [200]&gt;, expect_msg = '投资密码不能为空', expect_code = None
expect_text = None

    def common_assert(result, expect_msg=None, expect_code=None, expect_text=None):
        try:
            if expect_code:
                assert result.status_code == expect_code, "预期结果：{} 实际结果：{}".format(expect_code, result.status_code)
            if expect_msg:
                assert expect_msg in result.json().get("description"), "预期结果：{} 实际结果：{}".format(expect_msg,
                                                                                                result.json().get(
&gt;                                                                                                   "description"))
E                                                                                                   AssertionError: 预期结果：投资密码不能为空 实际结果：{'form': '&lt;form name=\'easypaysubmit\' id=\'easypaysubmit\' target=\'_blank\' method=\'post\' action=\'http://52.83.181.187:8000/muser/publicRequests\'&gt;&lt;input name=\'Version\' type=\'hidden\' value=\'20\'/&gt;&lt;input name=\'CmdId\' type=\'hidden\' value=\'InitiativeTender\'/&gt;&lt;input name=\'MerCustId\' type=\'hidden\' value=\'6000060007313892\'/&gt;&lt;input name=\'OrdId\' type=\'hidden\' value=\'21020316272077131795\'/&gt;&lt;input name=\'OrdDate\' type=\'hidden\' value=\'20210203\'/&gt;&lt;input name=\'TransAmt\' type=\'hidden\' value=\'1000.00\'/&gt;&lt;input name=\'UsrCustId\' type=\'hidden\' value=\'6020210203111708\'/&gt;&lt;input name=\'MaxTenderRate\' type=\'hidden\' value=\'0.20\'/&gt;&lt;input name=\'BorrowerDetails\' type=\'hidden\' value=\'[{"BorrowerCustId":"6021234507160403","BorrowerAmt":"1000.00","BorrowerRate":"0.90","ProId":""}]\'/&gt;&lt;input name=\'IsFreeze\' type=\'hidden\' value=\'Y\'/&gt;&lt;input name=\'FreezeOrdId\' type=\'hidden\' value=\'21020316272077131795\'/&gt;&lt;input name=\'RetUrl\' type=\'hidden\' value=\'http://user-p2p-test.itheima.net/trust/chinapnr/tender/return/21020316272077131795\'/&gt;&lt;input name=\'BgRetUrl\' type=\'hidden\' value=\'https://www.baidu.com/\'/&gt;&lt;input name=\'MerPriv\' type=\'hidden\' value=\'\'/&gt;&lt;input name=\'ReqExt\' type=\'hidden\' value=\'\'/&gt;&lt;input name=\'ChkValue\' type=\'hidden\' value=\'-101\'/&gt;&lt;input name=\'CharSet\' type=\'hidden\' value=\'UTF-8\'/&gt;&lt;/form&gt;&lt;script&gt;document.forms[\'easypaysubmit\'].submit();&lt;/script&gt;'}

../util.py:16: AssertionError</stack-trace>
      </failure>
      <attachments>
        <attachment source="7fcaedd5-d35f-4545-9d3d-7ae4e8af215b-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="37835-MainThread"/>
        <label name="host" value="MonkeyPro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1612340836166" status="passed" stop="1612340836314">
      <name>test03_tender.TestTender.test01_tender[642---1-\u4e0d\u662f\u6b63\u786e\u7684\u91d1\u989d]</name>
      <attachments>
        <attachment source="39cb77a6-39d9-43fa-bf30-54fc3547b9df-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="37835-MainThread"/>
        <label name="host" value="MonkeyPro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1612340836315" status="passed" stop="1612340836481">
      <name>test03_tender.TestTender.test01_tender[642-40--1-\u6295\u6807\u91d1\u989d\u4e0d\u80fd\u4f4e\u4e8e\u6700\u4f4e\u6295\u6807\u91d1\u989d]</name>
      <attachments>
        <attachment source="a73e9a1a-eb7a-429c-a12c-a0708b1371df-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="37835-MainThread"/>
        <label name="host" value="MonkeyPro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1612340836485" status="passed" stop="1612340836650">
      <name>test03_tender.TestTender.test01_tender[642-10000--1-\u6295\u6807\u91d1\u989d\u4e0d\u80fd\u8d85\u8fc7\u6700\u9ad8\u6295\u6807\u91d1\u989d]</name>
      <attachments>
        <attachment source="0ca1edbb-61f7-4807-94e8-7f05e76cb6db-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="37835-MainThread"/>
        <label name="host" value="MonkeyPro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1612340836652" status="passed" stop="1612340836806">
      <name>test03_tender.TestTender.test01_tender[642-101--1-\u6295\u6807\u91d1\u989d\u4e0d\u662f10\u7684\u500d\u6570!]</name>
      <attachments>
        <attachment source="bf2fc753-3031-4010-81db-c558300e9386-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="37835-MainThread"/>
        <label name="host" value="MonkeyPro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1612340836808" status="passed" stop="1612340836966">
      <name>test03_tender.TestTender.test01_tender[642-0--1-\u6295\u6807\u91d1\u989d\u4e0d\u80fd\u4f4e\u4e8e\u6700\u4f4e\u6295\u6807\u91d1\u989d]</name>
      <attachments>
        <attachment source="aecf66a6-c032-4cf8-9d42-cc12b269e874-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="37835-MainThread"/>
        <label name="host" value="MonkeyPro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
